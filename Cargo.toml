[package]
name = "waylyrics"
version = "0.3.13"
edition = "2021"
description = "Simple On Screen lyrics Display for linux/unix"
authors = ["poly000"]
license-file = "LICENSE"

[profile.release]
lto = "thin"
panic = "abort"
codegen-units = 1
opt-level = "s"

[profile.dev]
panic = "abort"

[profile.test]
debug = false
incremental = true
lto = "off"

[dependencies]
mimalloc = { version = "0.1.42", optional = true, default-features = false }
once_cell = "1.19.0"

# serializing
toml = "0.8.12"
toml_edit = { version = "0.22.13", features = ["serde"] }
documented = "0.5.0"
serde = { version = "1.0.209", features = ["derive"] }
serde_json = "1.0.127"
rust_decimal = { version = "1.36.0", default-features = false, features = [
    "std",
] }
rust_decimal_macros = "1.34.2"
url = "2.5.2"

# ui
gtk = { version = "0.9.0", package = "gtk4" }
glib-macros = "0.20.0"

# lyric providers + parse
ncmapi = { version = "0.1.13", package = "ncmapi2" }
qqmusic-rs = { version = "0.1.0" }
lrc-nom = "0.3.0"

# logging
tracing = "0.1.40"
tracing-journald = { version = "0.3.0", optional = true }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# cache
md5 = "0.7.0"

# utils
regex = "1.10.4"
directories = "5.0.1"
strum = { version = "0.26.2", default-features = false, features = ["derive"] }
sorensen = "0.2.0"
ahash = "0.8.11"
rfd = { version = "0.14.1", optional = true }

# error handling
anyhow = "1.0.86"
thiserror = "1.0.59"

# networking
async-trait = "0.1.80"
tokio = { version = "1.39.2", features = [
    "macros",
    "net",
    "time",
    "rt",
    "rt-multi-thread",
] }
reqwest = { version = "0.12.7" }

# async event
async-channel = { version = "2.3.1", optional = true }

# i18n
gettext-rs = { version = "0.7.1", features = [
    "gettext-system",
], optional = true }
opencc-rust = { version = "1.1", optional = true }
sys-locale = { version = "0.3.1", optional = true }

[features]
default = [
    "mimalloc",
    "tray-icon",
    "i18n",
    "journald",
    "import-lyric",
    "i18n-local-lyric",
]
tray-icon = ["action-event", "dep:ksni", "dep:tray-icon"]
i18n = ["dep:gettext-rs"]
journald = ["dep:tracing-journald"]
opencc = ["dep:opencc-rust"]
import-lyric = ["dep:rfd"]
i18n-local-lyric = ["dep:sys-locale"]

mimalloc = ["dep:mimalloc"]
vendored = ["dbus/vendored"]
action-event = ["dep:async-channel"]
offline-test = []

[target.'cfg(unix)'.dependencies]
# MPRIS integration
dbus = "0.9.7"
ksni = { version = "0.2.2", optional = true }
mpris = "2.0.1"

[target.'cfg(target_os = "windows")'.dependencies]
tray-icon = { version = "0.14.3", optional = true }
windows = { version = "0.58.0", features = [
    # SMTC
    "Media_Control",
    "Foundation_Collections",
    "Storage_Streams",
    # Surface operation
    "Win32_Foundation",
    "Win32_UI_WindowsAndMessaging",
] }
gdk4-win32 = { version = "0.9.0" }

[target.'cfg(windows)'.build-dependencies]
windows_exe_info = { version = "0.4" }
